functions......
function is block of code used to perform specific task
functions can be reuse for n number of times
function is reusable bit of block

syntax:
function function_name(optional parameters){
    // statements.
}
function_name(arguments);// functional callings.
note: with out callings a functional body it will never execute

named functions : having a name to decalre.
anonymus functions : doesn't hava any name it can'n be executed independently.
function expressions : func decleration is assigned as an value to the variable and same function is invoke with the help of variable
immediate invoke function : we can run this function only one time
arrow function : to concise the function.
higher order functions : it is a function which accept another function as value or arguments to its parameter.
callback functions : it is function which is passed as a value/ arguments to another function
        map : it can return a value it copies the given array and store it in new array
        forEach : it cann't return a value it can iterate values
return : it will return either expression or variables to future use it is an end of an statement.
implicit return : return without using a return keyword it only work for arrow functions.
explict return : return with a return keyword.

note: current version of javascript - es14
es - ECMa script
ECMA - european computer manufacturing association

closure : closure is a memory created when function bundle together or functions are nested each other by giving accessibility to the innermost functions to access the variables of outmost function
        variable phase and execution phase in global variables.
            variable phase : when variable is declared
            execution phase : when variable is used
        variables phase and execution phase in function variables.    

Arrays : collection of items/values.
         it can  store multiple values in a single variable
         array can store same datatype(homogenous values and hetrogenous values) and different datatype in javascript.
array methods : push, pop, unshift, shift, splice, sort, reverse, map
                map : 
                    it is used to iterate the values of an array one by one it can return a value.
                forEach : 
                    it is used to iterate the values of an array one by one but it cann't return a value.

Objects : obj is an entity the main purpose of the object is to store a values in the form of key and value pair
          obj is a physical entity which is having states (properities) and behaviours(method)
syntax :{key, value}
notes : object based language in (2015) + oops After Es6 update.

json : javascript object notation
       it is used to transmit the data from client to server and server to client.
syntax :{
    key, value
    } 

methods of JSON:
1. JSON.stringify()
2. JSON.parse()
3. JSON.stringify() : it is used to convert the object into string.
4. JSON.parse() : it is used to convert the string into object.


webstorages: it can store the data inside the browser
             upto 10MB of data can be stored
1. local storage : it is used to store the data in the local machine.(it is a permanent data storage , it is used to store 10MB data)
                   1.localStorage.setItem("key", "value")
                   2.localStorage.getItem("key")
                   3.localStorage.removeItem("key")
                   4.localStorage.clear()
2. session storage : it is used to store the data in the session.(it is a temporary data storage , it is used to store 5MB data)
                   1.sessionStorage.setItem("key", "value")
                   2.sessionStorage.getItem("key")
                   3.sessionStorage.removeItem("key")
                   4.sessionStorage.clear()


Note : javascript is synchronous (single threaded language)
       Asynchronous methods:
                    settimeout() : It is a web api used to perform Asynchronous operation only single output.
                                    settimeout(callbackfn, timeout)
                    setInterval() : it is used to execute the function after the specified time continuously prints output.
                                    setInterval(callbackfn, timeinterval)
                    promise() : it is an Es6 feature (It is an object which represents eventual completion or failures of Async operations).
                                states of promise:
                                            1.pending:ongoing
                                            2.fulfilled:successfully completed
                                            3.rejected:failures
                                            syntax: let x=new promise ((resolve,reject)=>{})

                                            for handling the promise we have a instance methods'
                                            1.then() : used to successful data
                                            2.catch() : it is used to handle errors
                                            3.finally() : it prints the result always.
                    Async & await : 
                    async : this keyword makes synchronous function as Asynchronous function and start execution
                    await : this keyword will make the function to wait until promise completes.


.........DOM : Document object model.....
Dom is web api used to manipulate the HTML content.
Dom is used to add, remove, update the content inside the html document..

methods of Dom:
    document.getElementById('') : based on id attribute value.
    document.getElementByClassName('') : based on class attribute value.
    document.getElementByTagName('') : based on tag name (e.g. p,h,etc)
    document.getElementByName('') : It will help to store the form data
    document.querySelector('') : it only select only one element based on css style attribute.
    document.querySelectorAll('') : it will select all elements


innerText :- help to change the inner text in the document.
innerHtml : add the value along with the tag.

Events in javascript : 
    events are nothing but an action to perform on html elements.
    
    we have click,mouse,key events.

    click events : onclick,ondblclick,onchange

....................28-01-2025....................